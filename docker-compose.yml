version: '3'

services:
  app:
    build:
      context: .
      args:
        - BUILD_MODE=development
    command: npm run docker-dev
    depends_on:
      - postgres
      - redis
      - localstack
    ports:
      - '3000:3000' # Webpack dev server
      - '8080:8080' # Express
      - '9229:9229' # Debugging for Node.js
    environment:
      - NODE_ENV=development
      - PORT=8080
      # postgres://user:pass@hostname:port/database
      - DB_URI=postgres://postgres:postgres@postgres:5432/postgres
      # redis://[CLUSTER-PUBLIC-IP]:[PORT]
      - REDIS_OTP_URI=redis://redis:6379/0
      - REDIS_SESSION_URI=redis://redis:6379/1
      - REDIS_REDIRECT_URI=redis://redis:6379/2
      - REDIS_STAT_URI=redis://redis:6379/3
      - REDIS_SAFE_BROWSING_URI=redis://redis:6379/4
      - SESSION_SECRET=thiscouldbeanything
      - GA_TRACKING_ID=UA-139330318-1
      - OG_URL=https://go.gov.sg
      - VALID_EMAIL_GLOB_EXPRESSION=*.gov.sg
      - LOGIN_MESSAGE=Your OTP might take awhile to get to you.
      - USER_MESSAGE=User message test
      - ANNOUNCEMENT_MESSAGE=Search by email to find link owners, or by keyword to discover other links! \n PRO TIP! Search your email domain to find out all the links made by your agency.
      - ANNOUNCEMENT_TITLE=GoDirectory is here!
      - ANNOUNCEMENT_SUBTITLE=Search all go.gov.sg links
      - ANNOUNCEMENT_URL=https://go.gov.sg/
      - ANNOUNCEMENT_IMAGE=/assets/transition-page/images/directory-browser.svg
      - AWS_S3_BUCKET=local-bucket
      - ROTATED_LINKS=whatsapp,passport,spsc,sppr
      - AWS_ACCESS_KEY_ID=foobar
      - AWS_SECRET_ACCESS_KEY=foobar
      - CSP_ONLY_REPORT_VIOLATIONS=true
      - SAFE_BROWSING_KEY=
      - CLOUDMERSIVE_KEY=
    volumes:
      - ./public:/usr/src/gogovsg/public
      - ./src:/usr/src/gogovsg/src

  postgres:
    image: debezium/postgres:11-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432' # Postgres
    command: ["postgres","-c","wal_level=logical"]
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:5.0.3-alpine
    ports:
      - '6379:6379'
  localstack:
    image: localstack/localstack:latest
    container_name: gogovsg-localstack
    ports:
      - '4566:4566'
      - '8055:8080' # View deployed resources @ http://localhost:8055/#!/infra.
    environment:
      - SERVICES=s3 # AWS services to emulate.
      - DEBUG=1 # Display relevant logs.
      - DATA_DIR=/tmp/localstack/data # Directory Localstack saves data internally.
      - HOSTNAME_EXTERNAL=localstack
      - AWS_BUCKET_NAME=local-bucket
      - AWS_ACCESS_KEY_ID=foobar
      - AWS_SECRET_ACCESS_KEY=foobar
    volumes:
      - ./init-localstack.sh:/docker-entrypoint-initaws.d/init-localstack.sh # Initialise the bucket.
      - './.localstack:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    ports:
      - "9201:9200"
      - "9301:9300"
    environment: 
      - xpack.security.enabled=false
      - network.host:127.0.0.1
      - http.host=0.0.0.0
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms750m -Xmx750m"
    ulimits: 
      memlock: 
        soft: -1
        hard: -1
  pysync:
    build:
      context: .
      dockerfile: Dockerfile.pgsync
    command: ./runserver.sh
    labels:
      org.label-schema.name: "pgsync"
      org.label-schema.description: "Postgres to elasticsearch sync"
      com.label-schema.service-type: "daemon"
    depends_on: 
      - postgres
      - redis
      - elasticsearch
    environment: 
      - PG_USER=postgres
      - PG_HOST=postgres
      - PG_PASSWORD=postgres
      - LOG_LEVEL=INFO
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis
      - POLL_TIMEOUT=1

volumes:
  pgdata:
